name: 每日邮件报告

on:
  schedule:
    # 每天上午9点执行 (UTC时间，北京时间17点)
    - cron: '0 1 * * *'
  workflow_dispatch: # 允许手动触发

jobs:
  send-daily-report:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检查代码
      uses: actions/checkout@v4
      
    - name: 调用Dify Workflow获取数据
      id: dify-data
      run: |
        # 设置Dify API配置（URL直接写在代码中）
        DIFY_API_URL="https://dify.comlan.com/v1/workflows/run"
        DIFY_API_KEY="${{ secrets.DIFY_API_KEY }}"
        
        echo "正在调用Dify Workflow..."
        echo "API URL: $DIFY_API_URL"
        echo "API Key长度: ${#DIFY_API_KEY}"
        
        # 测试网络连接
        echo "测试网络连接..."
        curl -s --connect-timeout 10 "https://dify.comlan.com" > /dev/null
        if [ $? -eq 0 ]; then
          echo "网络连接正常"
        else
          echo "网络连接失败"
        fi
        
        # 调用Dify Workflow API
        echo "发送API请求..."
        response=$(curl -s -X POST "$DIFY_API_URL" \
          -H "Authorization: Bearer $DIFY_API_KEY" \
          -H "Content-Type: application/json" \
          -d '{
            "inputs": {},
            "response_mode": "blocking",
            "user": "github-actions-'$(date +%Y%m%d-%H%M%S)'"
          }' \
          --connect-timeout 30 \
          --max-time 60 \
          -w "HTTP状态码: %{http_code}\n" 2>&1)
        
        # 检查API调用是否成功
        if [ $? -eq 0 ] && [ -n "$response" ]; then
          echo "Dify Workflow调用成功"
          echo "原始响应长度: $(echo "$response" | wc -c) 字符"
          echo "原始响应内容:"
          echo "$response"
          
          # 直接保存原始响应，不做任何修改
          echo "response<<EOF" >> $GITHUB_OUTPUT
          echo "$response" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "Dify Workflow调用失败"
          echo "curl退出码: $?"
          echo "响应内容: $response"
          echo "使用默认内容"
          echo "response<<EOF" >> $GITHUB_OUTPUT
          echo '{"error": "Dify API调用失败", "message": "请检查API配置和网络连接", "timestamp": "'$(date)'"}' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        fi
        
    - name: 处理Dify返回数据（保持原始格式）
      id: process-data
      run: |
        # 获取Dify返回的原始数据
        dify_response='${{ steps.dify-data.outputs.response }}'
        
        echo "=== Dify返回的原始数据 ==="
        echo "$dify_response"
        echo "=== 原始数据结束 ==="
        
        # 检查是否是JSON格式
        if echo "$dify_response" | jq empty 2>/dev/null; then
          echo "检测到JSON格式，尝试提取内容"
          
          # 尝试提取email_html字段
          email_html=$(echo "$dify_response" | jq -r '.data.outputs.email_html // .outputs.email_html // .email_html // empty' 2>/dev/null)
          
          if [ -n "$email_html" ] && [ "$email_html" != "null" ]; then
            echo "成功提取HTML内容"
            email_content="$email_html"
            content_type="html"
          else
            echo "未找到email_html字段，使用原始JSON"
            email_content="$dify_response"
            content_type="json"
          fi
        else
          echo "检测到非JSON格式，直接使用原始内容"
          email_content="$dify_response"
          content_type="text"
        fi
        
        echo "最终邮件内容类型: $content_type"
        echo "内容长度: $(echo "$email_content" | wc -c) 字符"
        
        # 输出处理后的内容
        echo "email_content<<EOF" >> $GITHUB_OUTPUT
        echo "$email_content" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        echo "content_type<<EOF" >> $GITHUB_OUTPUT
        echo "$content_type" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: 发送邮件（使用Dify数据）
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: mail.comlan.com
        server_port: 25
        username: ${{ secrets.MAIL_USERNAME }}
        password: ${{ secrets.MAIL_PASSWORD }}
        subject: '每日报告 - ${{ github.workflow }} - $(date +"%Y-%m-%d %H:%M")'
        body: ${{ steps.process-data.outputs.email_content }}
        to: wang.tianyang@comlan.com
        from: ai.public@comlan.com
        content_type: 'text/html'
