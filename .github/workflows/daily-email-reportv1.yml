# .github/workflows/send-daily-email.yml

name: Send Daily Email from Dify

on:
  schedule:
    # 每 15 分钟运行一次
    - cron: '*/15 * * * *
   
  # 允许您手动在 Actions 页面点击按钮来测试运行
  workflow_dispatch:

jobs:
  send_email_job:
    runs-on: ubuntu-latest
    name: Fetch Dify Content and Send Email

    steps:
      # 步骤 1: 从 Dify 获取邮件的 HTML 内容
      - name: "Step 1: Fetch Content from Dify"
        id: fetch_dify
        run: |
          API_RESPONSE=$(curl -s -k -X POST \
            -H "Authorization: Bearer ${{ secrets.DIFY_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
                  "inputs": {},
                  "response_mode": "blocking",
                  "user": "github-action-runner"
                }' \
            "https://dify.comlan.com/v1/workflows/run")
          if ! echo "$API_RESPONSE" | jq . > /dev/null 2>&1; then
            echo "::error::Failed to parse JSON response from Dify. Check API Key or Dify status."
            exit 1
          fi
          HTML=$(echo "$API_RESPONSE" | jq -r '.data.outputs.html_content')
          if [ -z "$HTML" ]; then
            echo "::error::Dify API did not return content from the 'html_content' field."
            exit 1
          fi
          echo "html_content<<EOF" >> $GITHUB_OUTPUT
          echo "$HTML" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # 步骤 2: 安装并设置 Python 环境
      - name: "Step 2: Setup Python"
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 步骤 3: 使用 Python 脚本发送邮件
      - name: "Step 3: Send Email with Python"
        shell: python
        env:
          MAIL_SERVER: 'mail.comlan.com'
          MAIL_PORT: 587
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_TO: ${{ secrets.MAIL_TO }}
          MAIL_SUBJECT: '每日简报 - 由 Dify 生成'
          MAIL_BODY_HTML: ${{ steps.fetch_dify.outputs.html_content }}
        run: |
          import smtplib
          import ssl
          from email.mime.text import MIMEText
          from email.header import Header
          import os

          sender = os.environ['MAIL_USERNAME']
          receivers = [os.environ['MAIL_TO']]
          password = os.environ['MAIL_PASSWORD']
          smtp_server = os.environ['MAIL_SERVER']
          smtp_port = int(os.environ['MAIL_PORT'])
          subject = os.environ['MAIL_SUBJECT']
          html_content = os.environ['MAIL_BODY_HTML']

          msg = MIMEText(html_content, 'html', 'utf-8')
          msg['From'] = Header(f"Dify 每日简报 <{sender}>", 'utf-8')
          msg['To'] =  Header(','.join(receivers), 'utf-8')
          msg['Subject'] = Header(subject, 'utf-8')
          
          try:
              print(f"Connecting to mail server {smtp_server}:{smtp_port}...")
              
              # 关键修正：使用官方推荐的方法创建不验证证书的 SSL 上下文
              context = ssl.create_default_context()
              context.check_hostname = False
              context.verify_mode = ssl.CERT_NONE

              server = smtplib.SMTP(smtp_server, smtp_port, timeout=15)
              server.starttls(context=context)
              
              print("Logging in...")
              server.login(sender, password)
              
              print("Sending email...")
              server.sendmail(sender, receivers, msg.as_string())
              server.quit()
              print("Email sent successfully!")

          except Exception as e:
              print("::error::Failed to send email.")
              print(e)
              exit(1)
