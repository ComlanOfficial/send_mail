- name: "Step 1: Fetch Content from Dify and Save to File"
        id: fetch_dify
        run: |
          API_RESPONSE=$(curl -s -k -X POST \
            -H "Authorization: Bearer ${{ secrets.DIFY_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
                  "inputs": {},
                  "response_mode": "blocking",
                  "user": "github-action-runner"
                }' \
            "https://dify.comlan.com/v1/workflows/run")
                    
          # 检查 API 响应是否为有效的 JSON
          if ! echo "$API_RESPONSE" | jq . > /dev/null 2>&1; then
            echo "::error::Failed to parse JSON response from Dify. Raw response: $API_RESPONSE"
            exit 1
          fi
                    
          # --- 核心修正：使用强大的 JQ 过滤器来提取内容 ---
          # 尝试从以下任一路径提取 html_content 的值：
          # 1. 标准路径: .data.outputs.html_content
          # 2. 递归下降: 查找 JSON 中任意深度的 "html_content" 键
          # `.. | select(has("html_content")) | .html_content`
          # 这样可以防止因 Dify 结构变化而找不到字段。
          HTML_CONTENT=$(echo "$API_RESPONSE" | jq -r '.data.outputs.html_content // (.. | select(has("html_content")) | .html_content // empty) | select(. != null and . != "")' | head -n 1)

          # 检查提取的内容是否为空
          if [ -z "$HTML_CONTENT" ]; then
            echo "::error::Dify API did not return content from the 'html_content' field or the content was empty/null."
            echo "::error::Dify Raw Response:"
            echo "$API_RESPONSE"
            exit 1
          fi
                    
          # 将 HTML 内容写入一个临时文件
          echo "$HTML_CONTENT" > email_body.html
          echo "HTML content successfully extracted and saved to email_body.html (Size: $(echo -n "$HTML_CONTENT" | wc -c) bytes)"
